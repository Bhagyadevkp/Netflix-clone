{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\netflix\\\\src\\\\Components\\\\RowPost\\\\RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport axios from '../../axios';\nimport { imageUrl } from '../../Constants/constants';\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rowpost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      // alert('Network Error')\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  const handleMovie = id => {\n    console.log;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: \"2g811Eo7K8U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Rowpost, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Rowpost;\nexport default Rowpost;\nvar _c;\n$RefreshReg$(_c, \"Rowpost\");","map":{"version":3,"names":["React","useEffect","useState","axios","imageUrl","Youtube","Rowpost","props","movies","setMovies","get","url","then","response","console","log","data","results","catch","err","opts","height","width","playerVars","autoplay","handleMovie","id","title","map","obj","isSmall","backdrop_path"],"sources":["C:/Users/user/netflix/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './RowPost.css'\r\nimport axios from '../../axios'\r\nimport {imageUrl} from '../../Constants/constants'\r\nimport Youtube from 'react-youtube'\r\n\r\nfunction Rowpost(props) {\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        axios.get(props.url).then(response =>{\r\n            console.log(response.data)\r\n            setMovies(response.data.results)\r\n        }).catch(err =>{\r\n            // alert('Network Error')\r\n        })\r\n    }, [])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 0,\r\n        },\r\n    };\r\n    const handleMovie = (id)=>{\r\n        console.log\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n                {movies.map((obj) =>\r\n                <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster': 'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\r\n                )}\r\n            </div>\r\n            <Youtube opts={opts} videoId=\"2g811Eo7K8U\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rowpost"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,QAAQ,QAAO,2BAA2B;AAClD,OAAOC,OAAO,MAAM,eAAe;AAAA;AAEnC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACO,GAAG,CAACH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;MACjCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BP,SAAS,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG;MACX;IAAA,CACH,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACFC,QAAQ,EAAE;IACV;EACJ,CAAC;EACD,MAAMC,WAAW,GAAIC,EAAE,IAAG;IACtBZ,OAAO,CAACC,GAAG;EACf,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKR,KAAK,CAACoB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBnB,MAAM,CAACoB,GAAG,CAAEC,GAAG,iBAChB;QAAK,OAAO,EAAE,MAAIJ,WAAW,CAACI,GAAG,CAACH,EAAE,CAAE;QAAC,SAAS,EAAEnB,KAAK,CAACuB,OAAO,GAAG,aAAa,GAAE,QAAS;QAAC,GAAG,EAAG,GAAE1B,QAAQ,GAACyB,GAAG,CAACE,aAAc,EAAE;QAAC,GAAG,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAC/I;MAAA;MAAA;MAAA;IAAA,QACC,eACN,QAAC,OAAO;MAAC,IAAI,EAAEX,IAAK;MAAC,OAAO,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEd;AAAC,GAhCQd,OAAO;AAAA,KAAPA,OAAO;AAkChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}